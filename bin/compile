#!/usr/bin/env bash
if [[ -n "${DEBUG:+set}" ]]; then
  set -x
fi

unset GIT_DIR

for BUILDPACK in $(cat $1/.buildpacks); do
  dir=$(mktemp -t buildpackXXXXX)
  rm -rf $dir

  url=${BUILDPACK%#*}
  branch=${BUILDPACK#*#}

  if [ "$branch" == "$url" ]; then
    branch=""
  fi

  if [ "$url" != "" ]; then
    echo "=====> Downloading Buildpack: $url"

    if [[ "$url" =~ \.tgz$ ]] || [[ "$url" =~ \.tgz\? ]]; then
      mkdir -p "$dir"
      curl -s "$url" | tar xvz -C "$dir"
      if [ $? != 0 ]; then
        echo "Failed to grab $url"
        exit 1
      fi
    else
      git clone $url $dir
      if [ $? != 0 ]; then
        echo "Failed to clone $url, do you have shopify-dep added as a collaborator to your repo?"
        exit 1
      fi
    fi
    cd $dir

    if [ "$branch" != "" ]; then
      git checkout $branch 
      if [ $? != 0 ]; then
        echo "Failed to checkout $branch"
        exit 1
      fi
    fi

    # we'll get errors later if these are needed and don't exist
    chmod -f +x $dir/bin/{detect,compile,release} || true

    framework=$($dir/bin/detect $1)

    if [ $? == 0 ]; then
      echo "=====> Detected Framework: $framework"
      $dir/bin/compile $1 $2 $3

      if [ $? != 0 ]; then
        exit 1
      fi

      # check if the buildpack left behind an environment for subsequent ones
      if [ -e $dir/export ]; then
        source $dir/export
      fi

      if [ -x $dir/bin/release ]; then
        $dir/bin/release $1 > $1/last_pack_release.out
      fi
    else
      echo "Could not detect any framework for this buildpack. Exiting."
      exit 1
    fi
  fi
done

if [ -e $1/last_pack_release.out ]; then
  echo "Using release configuration from last framework ($framework)."
fi
